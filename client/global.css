/** @import must precede all other statements */
@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700;800&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /**
   * Tailwind CSS theme
   * tailwind.config.ts expects the following color variables to be expressed as HSL values.
   * A different format will require also updating the theme in tailwind.config.ts.
  */
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 10%;

    --card: 0 0% 100%;
    --card-foreground: 240 10% 10%;

    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 10%;

    --primary: 258 90% 60%;
    --primary-foreground: 0 0% 100%;

    --secondary: 260 60% 96%;
    --secondary-foreground: 258 40% 20%;

    --muted: 240 20% 96%;
    --muted-foreground: 240 6% 35%;

    --accent: 260 60% 96%;
    --accent-foreground: 258 40% 20%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 240 16% 90%;
    --input: 240 16% 90%;
    --ring: 258 90% 60%;

    --radius: 0.75rem;

    --sidebar-background: 260 60% 97%;

    --sidebar-foreground: 258 30% 22%;

    --sidebar-primary: 258 90% 60%;

    --sidebar-primary-foreground: 0 0% 100%;

    --sidebar-accent: 260 60% 96%;

    --sidebar-accent-foreground: 258 40% 22%;

    --sidebar-border: 260 20% 90%;

    --sidebar-ring: 258 90% 60%;
  }

  .dark {
    --background: 246 24% 10%;
    --foreground: 210 40% 98%;

    --card: 246 24% 12%;
    --card-foreground: 210 40% 98%;

    --popover: 246 24% 12%;
    --popover-foreground: 210 40% 98%;

    --primary: 258 90% 70%;
    --primary-foreground: 246 24% 12%;

    --secondary: 255 18% 20%;
    --secondary-foreground: 210 40% 98%;

    --muted: 255 18% 20%;
    --muted-foreground: 215 20% 65.1%;

    --accent: 255 18% 20%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 35.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 255 18% 22%;
    --input: 255 18% 22%;
    --ring: 258 90% 70%;
    --sidebar-background: 246 24% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 258 90% 70%;
    --sidebar-primary-foreground: 0 0% 10%;
    --sidebar-accent: 255 18% 20%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 255 18% 20%;
    --sidebar-ring: 258 90% 70%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    font-family:
      "Open Sans",
      ui-sans-serif,
      system-ui,
      -apple-system,
      "Segoe UI",
      Roboto,
      Arial,
      "Noto Sans",
      "Apple Color Emoji",
      "Segoe UI Emoji",
      "Segoe UI Symbol",
      sans-serif;
    @apply bg-background text-foreground;
  }
}

/* Route transition (applies to all pages via Layout) */
.routefade-appear,
.routefade-enter {
  opacity: 0;
  transform: perspective(1000px) translateZ(-80px) translateY(var(--routefade-distance, 18px)) scale(0.98);
  filter: blur(6px);
}
.routefade-appear-active,
.routefade-enter-active {
  opacity: 1;
  transform: perspective(1000px) translateZ(0) translateY(0) scale(1);
  filter: blur(0px);
  transition:
    opacity var(--routefade-enter-duration, 800ms) cubic-bezier(.2,.8,.2,1),
    transform var(--routefade-enter-duration, 800ms) cubic-bezier(.2,.8,.2,1),
    filter var(--routefade-enter-duration, 800ms) linear;
  will-change: opacity, transform, filter;
}
.routefade-appear-done,
.routefade-enter-done {
  opacity: 1;
  transform: perspective(1000px) translateZ(0) translateY(0) scale(1);
  filter: blur(0px);
}
.routefade-exit {
  opacity: 1;
  transform: perspective(1000px) translateZ(0) translateY(0) scale(1);
  filter: blur(0px);
}
.routefade-exit-active {
  opacity: 0;
  transform: perspective(1000px) translateZ(-60px) translateY(8px) scale(0.98);
  filter: blur(4px);
  transition:
    opacity var(--routefade-exit-duration, 400ms) cubic-bezier(.2,.8,.2,1),
    transform var(--routefade-exit-duration, 400ms) cubic-bezier(.2,.8,.2,1),
    filter var(--routefade-exit-duration, 400ms) linear;
}

/* Page enter animation classes for react-transition-group (legacy, home-only) */
.pagefade-appear,
.pagefade-enter {
  opacity: 0;
  transform: translateY(12px);
}
.pagefade-appear-active,
.pagefade-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 800ms ease-in-out, transform 800ms ease-in-out;
  will-change: opacity, transform;
}
.pagefade-appear-done,
.pagefade-enter-done {
  opacity: 1;
  transform: translateY(0);
}
.pagefade-exit {
  opacity: 1;
  transform: translateY(0);
}
.pagefade-exit-active {
  opacity: 0;
  transform: translateY(8px);
  transition: opacity 300ms ease-in-out, transform 300ms ease-in-out;
}
